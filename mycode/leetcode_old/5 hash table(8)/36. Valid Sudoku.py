# -*- encoding: utf-8 -*-
# 2.5级
# 题目：横不能重复，纵不能重复，3*3的块里不能重复
# 思路：往一个list里填数对,seen += (c,j),(i,c),(i/3,j/3,c) (c,j)c表示那个数,j表示那个列.所以这个意思是第j列有这个数c,(i,c)第i行有这个数c,这个小方块里有这个数
#     最后如果这个list没有重复的,就true


def isValidSudoku(board):
    seen = []
    for i, row in enumerate(board):
        for j, c in enumerate(row):
            if c != '.':
                seen += (c,j),(i,c),(i/3,j/3,c)  #(c,j)c表示那个数,j表示那个列.所以这个意思是第j列有这个数c,(i,c)第i行有这个数c,这个小方块里有这个数
    return len(seen) == len(set(seen))   #看里面有没重复的
#
if __name__ == '__main__':
    board = [[5,3,'.','.',7,'.','.','.','.'],[6,'.','.',1,9,5,'.','.','.'],[5,3,'.','.',7,'.','.','.','.'],[6,'.','.',1,9,5,'.','.','.'],[5,3,'.','.',7,'.','.','.','.'],[6,'.','.',1,9,5,'.','.','.'],[5,3,'.','.',7,'.','.','.','.'],[6,'.','.',1,9,5,'.','.','.'],[5,3,'.','.',7,'.','.','.','.']]
    print isValidSudoku(board)